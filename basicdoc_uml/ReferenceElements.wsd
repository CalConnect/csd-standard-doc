@startuml ReferenceElements
/'
Diagram:        ReferenceElements
DateCreate:     28/07/2018
Description:    BasicDocument / SecureDoc is a family of document models that forms the basis of Metanorma IsoDoc (via Metanorma StandardDocument), which is used to represent ISO Standards and similarly structured standards.
                It is also the document model that Selagraph operates on.
                The Relaton Bibliography UML models used in these models are located here: Relaton BibModels.
                BasicDocument itself is a document model that can serve as a transit data structure for document conversion, such as taking input from AsciiDoc or Markdown and converting them into an output format, such as Metanorma IsoDoc

Hystory of changes:
> 22/08/2018
    - diagram configuration updated
    - relations between some elements are updated
'/

'******* CONFIGURATION ************************************************
skinparam classAttributeIconSize 0
skinparam Dpi 150
skinparam Monochrome true
skinparam LineType ortho
hide circle
/' skinparam CircledCharacterRadius 0 '/
/' skinparam CircledCharacterFontSize 0 '/
skinparam Default {
TextAlignment center
FontName Helvetica
}
skinparam Class {
AttributeIconSize 0
BackgroundColor White
FontStyle bold
StereotypeFontSize 10
}
skinparam Rectangle {
BackgroundColor White
FontStyle bold
FontSize 11
StereotypeFontSize 10
}
skinparam Object {
BackgroundColor White
FontStyle bold
FontSize 11
StereotypeFontSize 10
}

skinparam Entity {
StereotypeFontSize 10
}



'******* CLASS DEFINITION *********************************************
class BasicElement {
    +contribMetadata: ContributionElementMetadata[0..*]
}

class ReferenceElement{
    +type: ReferenceFormat
    +text: BasicElement[0..1]
}

class Citation <<Bibliography>>{

}

class ReferenceToldElement{
    +target: IdElement
}

class ReferenceToLinkElement{
    +target: Uri
}

class ReferenceToCitationElement{
    +normative: Boolean[0..1]
    +citeAs: TextElement[0..*]

}

class ReferenceToldWithParagraphElement{
    +content: ParagraphBlock[1..*]
}

class Callout{
    +type: "callout"
    +text: TextElement
}

class Footnote{
    +type: "footnote"
}

enum ReferenceFormat <<enumeration>>{
    external
    inline
    footnote
    callout
}


'******* NOTES *******************************************************
note "* `text` is what you want to show the link as.\n(i.e., the `content` of <xx>my link text</xx>)" as N1
note left of ReferenceToldWithParagraphElement: `ReferenceToldWithParagraphElement`\nis just a Footnote or a CalloutAnnotation\nwith the proper ReferenceFormat
note bottom of Footnote: `Footnote` is a ReferenceToldWithParagraphElement,\nwith type understood to be footnote,\nand target eliminated since the target text identified\nis the content attribute
note bottom of Callout: `Callout` is a ReferenceToldElement with\ntype understood to be callout,\nand with text constrained to be a TextElement


'******* CLASS RELATIONS *********************************************
BasicElement <|-- ReferenceElement

ReferenceElement <|-- ReferenceToldElement
ReferenceElement <|-- ReferenceToLinkElement
ReferenceElement <|-- ReferenceToCitationElement

ReferenceElement <-- ReferenceFormat

Citation <|-right- ReferenceToCitationElement

ReferenceToldElement <|-- ReferenceToldWithParagraphElement
ReferenceToldElement <|-- Callout

ReferenceToldWithParagraphElement <|-- Footnote

@enduml